//
// Copyright 2017 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
@import "~@material/rtl/mixins";
@import "~@material/theme/mixins";
@import "~@material/typography/mixins";
@import "~@material/toolbar/mixins";
$mdc-toolbar-row-height: 50px;
$mdc-toolbar-mobile-row-height: 50px;
$mdc-toolbar-mobile-landscape-row-height: 50px;

$mdc-toolbar-element-vertical-padding: 16px;
$mdc-toolbar-element-horizontal-padding-desktop: 24px;
$mdc-toolbar-element-horizontal-padding-mobile: 8px;
$mdc-toolbar-title-margin-to-menu-icon-desktop: 8px;
$mdc-toolbar-title-margin-to-menu-icon-mobile: 16px;

$mdc-toolbar-ratio-to-extend-flexible: 4 !default;

$mdc-toolbar-mobile-landscape-width-breakpoint: 959px;
$mdc-toolbar-mobile-breakpoint: 599px;

$mdc-elevation-baseline-color: black;
$mdc-elevation-umbra-opacity: .2;
$mdc-elevation-penumbra-opacity: .14;
$mdc-elevation-ambient-opacity: .12;

$mdc-elevation-umbra-map: (
        0: "0px 0px 0px 0px",
        1: "0px 2px 1px -1px",
        2: "0px 3px 1px -2px",
        3: "0px 3px 3px -2px",
        4: "0px 2px 4px -1px",
        5: "0px 3px 5px -1px",
        6: "0px 3px 5px -1px",
        7: "0px 4px 5px -2px",
        8: "0px 5px 5px -3px",
        9: "0px 5px 6px -3px",
        10: "0px 6px 6px -3px",
        11: "0px 6px 7px -4px",
        12: "0px 7px 8px -4px",
        13: "0px 7px 8px -4px",
        14: "0px 7px 9px -4px",
        15: "0px 8px 9px -5px",
        16: "0px 8px 10px -5px",
        17: "0px 8px 11px -5px",
        18: "0px 9px 11px -5px",
        19: "0px 9px 12px -6px",
        20: "0px 10px 13px -6px",
        21: "0px 10px 13px -6px",
        22: "0px 10px 14px -6px",
        23: "0px 11px 14px -7px",
        24: "0px 11px 15px -7px"
);

$mdc-elevation-penumbra-map: (
        0: "0px 0px 0px 0px",
        1: "0px 1px 1px 0px",
        2: "0px 2px 2px 0px",
        3: "0px 3px 4px 0px",
        4: "0px 4px 5px 0px",
        5: "0px 5px 8px 0px",
        6: "0px 6px 10px 0px",
        7: "0px 7px 10px 1px",
        8: "0px 8px 10px 1px",
        9: "0px 9px 12px 1px",
        10: "0px 10px 14px 1px",
        11: "0px 11px 15px 1px",
        12: "0px 12px 17px 2px",
        13: "0px 13px 19px 2px",
        14: "0px 14px 21px 2px",
        15: "0px 15px 22px 2px",
        16: "0px 16px 24px 2px",
        17: "0px 17px 26px 2px",
        18: "0px 18px 28px 2px",
        19: "0px 19px 29px 2px",
        20: "0px 20px 31px 3px",
        21: "0px 21px 33px 3px",
        22: "0px 22px 35px 3px",
        23: "0px 23px 36px 3px",
        24: "0px 24px 38px 3px"
);

$mdc-elevation-ambient-map: (
        0: "0px 0px 0px 0px",
        1: "0px 1px 3px 0px",
        2: "0px 1px 5px 0px",
        3: "0px 1px 8px 0px",
        4: "0px 1px 10px 0px",
        5: "0px 1px 14px 0px",
        6: "0px 1px 18px 0px",
        7: "0px 2px 16px 1px",
        8: "0px 3px 14px 2px",
        9: "0px 3px 16px 2px",
        10: "0px 4px 18px 3px",
        11: "0px 4px 20px 3px",
        12: "0px 5px 22px 4px",
        13: "0px 5px 24px 4px",
        14: "0px 5px 26px 4px",
        15: "0px 6px 28px 5px",
        16: "0px 6px 30px 5px",
        17: "0px 6px 32px 5px",
        18: "0px 7px 34px 6px",
        19: "0px 7px 36px 6px",
        20: "0px 8px 38px 7px",
        21: "0px 8px 40px 7px",
        22: "0px 8px 42px 7px",
        23: "0px 9px 44px 8px",
        24: "0px 9px 46px 8px"
);

/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */
$mdc-elevation-property: box-shadow !default;

/**
 * The default duration value for elevation transitions.
 */
$mdc-elevation-transition-duration: 280ms !default;

/**
 * The default easing value for elevation transitions.
 */
$mdc-elevation-transition-timing-function: cubic-bezier !default;


.mdc-elevation-transition {
  -webkit-transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
  will-change: box-shadow;
}

/**
 * Applies the correct CSS rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 * If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use
 * $opacity-boost.
 */
@mixin mdc-elevation($z-value, $color: $mdc-elevation-baseline-color, $opacity-boost: 0) {
  @if type-of($z-value) != number or not unitless($z-value) {
    @error "$z-value must be a unitless number, but received '#{$z-value}'";
  }

  @if $z-value < 0 or $z-value > 24 {
    @error "$z-value must be between 0 and 24, but received '#{$z-value}'";
  }


  @if type-of($color) != color {
    @error "$color must be a valid color, but '#{$color}' is of type #{type-of($color)}";
  }

  $umbra-z-value: map-get($mdc-elevation-umbra-map, $z-value);
  $penumbra-z-value: map-get($mdc-elevation-penumbra-map, $z-value);
  $ambient-z-value: map-get($mdc-elevation-ambient-map, $z-value);

  $umbra-color: rgba($color, $mdc-elevation-umbra-opacity + $opacity-boost);
  $penumbra-color: rgba($color, $mdc-elevation-penumbra-opacity + $opacity-boost);
  $ambient-color: rgba($color, $mdc-elevation-ambient-opacity + $opacity-boost);

  box-shadow:
          #{"#{$umbra-z-value} #{$umbra-color}"},
          #{"#{$penumbra-z-value} #{$penumbra-color}"},
          #{$ambient-z-value} $ambient-color;
}

/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */
@function mdc-elevation-transition-rule(
  $duration: $mdc-elevation-transition-duration,
  $easing: $mdc-elevation-transition-timing-function) {
  @return #{$mdc-elevation-property} #{$duration} #{$easing};
}

/**
 * Applies the correct css rules needed to have an element transition between elevations.
 * This mixin should be applied to elements whose elevation values will change depending on their
 * context (e.g. when active or disabled).
 */
// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can
// be used in the same way by clients.
@mixin mdc-elevation-transition(
  $duration: $mdc-elevation-transition-duration,
  $easing: $mdc-elevation-transition-timing-function) {
  transition: mdc-elevation-transition-rule($duration, $easing);
  will-change: $mdc-elevation-property;
}

// postcss-bem-linter: define toolbar
.mdc-toolbar {
  background: map_get(theme-color(),'color');
  color: map_get(theme-color('secondary'),'color');

  display: flex;
  position: relative;
  flex-direction: column;
  justify-content: space-between;
  box-sizing: border-box;
  width: 100%;

  &__row {
    display: flex;
    position: relative;
    align-items: center;
    box-sizing: border-box;
    width: 100%;
    height: auto;
    min-height: $mdc-toolbar-row-height;
  }

  &__section {
    display: inline-flex;
    flex: 1;
    align-items: flex-start;
    justify-content: center;
    min-width: 0;
    height: 100%;
    z-index: 1;

    &--align-start {
      justify-content: flex-start;
      order: -1;
    }

    &--align-end {
      justify-content: flex-end;
      order: 1;
    }
  }

  &__title {
    @include mdc-typography(title);
    @include mdc-typography-overflow-ellipsis;
    @include mdc-rtl-reflexive-box(margin, left, $mdc-toolbar-element-horizontal-padding-desktop);

    align-self: center;
    padding: $mdc-toolbar-element-vertical-padding 0;
    line-height: 1rem;
    z-index: 1;
  }

  &__icon {
    @include mdc-shared-icon-style;
    @include mdc-theme-prop(color, text-primary-on-primary);

    padding-right: $mdc-toolbar-element-horizontal-padding-desktop / 2;
    padding-left: $mdc-toolbar-element-horizontal-padding-desktop / 2;
    cursor: pointer;
  }

  &__icon:last-of-type {
    @include mdc-rtl-reflexive-property(padding, $mdc-toolbar-element-horizontal-padding-desktop / 2, $mdc-toolbar-element-horizontal-padding-desktop);
  }

  &__menu-icon {
    @include mdc-shared-icon-style;
    @include mdc-theme-prop(color, text-primary-on-primary);

    padding-right: $mdc-toolbar-element-horizontal-padding-desktop;
    padding-left: $mdc-toolbar-element-horizontal-padding-desktop;
    cursor: pointer;
  }
}

.mdc-toolbar__menu-icon + .mdc-toolbar__title {
  @include mdc-rtl-reflexive-box(margin, left, $mdc-toolbar-title-margin-to-menu-icon-desktop);
}

@media (max-width: $mdc-toolbar-mobile-breakpoint) {
  .mdc-toolbar__title {
    @include mdc-rtl-reflexive-box(margin, left, $mdc-toolbar-element-horizontal-padding-mobile);
  }

  .mdc-toolbar__icon {
    padding-right: $mdc-toolbar-element-horizontal-padding-mobile / 2;
    padding-left: $mdc-toolbar-element-horizontal-padding-mobile / 2;
  }

  .mdc-toolbar__icon:last-of-type {
    @include mdc-rtl-reflexive-property(padding, $mdc-toolbar-element-horizontal-padding-mobile / 2, $mdc-toolbar-element-horizontal-padding-mobile);
  }

  .mdc-toolbar__menu-icon {
    padding-right: $mdc-toolbar-element-horizontal-padding-mobile;
    padding-left: $mdc-toolbar-element-horizontal-padding-mobile;
  }

  .mdc-toolbar__menu-icon + .mdc-toolbar__title {
    @include mdc-rtl-reflexive-box(margin, left, $mdc-toolbar-title-margin-to-menu-icon-mobile);
  }
}

.mdc-toolbar--fixed {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 4;
}
.mdc-toolbar--flexible {
  // stylelint-disable plugin/selector-bem-pattern
  // bem linter is disabled because it cannot correctly reconcile mdc prefix for css variables.
  --mdc-toolbar-ratio-to-extend-flexible: #{$mdc-toolbar-ratio-to-extend-flexible};
  // stylelint-enable plugin/selector-bem-pattern

  .mdc-toolbar__row:first-child {
    height: $mdc-toolbar-row-height * $mdc-toolbar-ratio-to-extend-flexible;
    height: calc(#{$mdc-toolbar-row-height} * var(--mdc-toolbar-ratio-to-extend-flexible, #{$mdc-toolbar-ratio-to-extend-flexible}));

    @media (max-width: $mdc-toolbar-mobile-breakpoint) {
      height: $mdc-toolbar-mobile-row-height * $mdc-toolbar-ratio-to-extend-flexible;
      height: calc(#{$mdc-toolbar-mobile-row-height} * var(--mdc-toolbar-ratio-to-extend-flexible, #{$mdc-toolbar-ratio-to-extend-flexible}));
    }

    &::after {
      // The style ensures the pseudo element will be defined and can easily be styled
      position: absolute;
      content: "";
    }
  }

  // stylelint-disable plugin/selector-bem-pattern
  // bem linter is disabled because it cannot handle multiple top level selector
  &-default-behavior {
    .mdc-toolbar__title {

      align-self: flex-end;
      line-height: 1.5rem;
    }

    .mdc-toolbar__row:first-child::after {
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      transition: opacity .2s ease;
      opacity: 1;
    }

    &.mdc-toolbar--flexible-space-minimized {
      .mdc-toolbar__row:first-child::after {
        opacity: 0;
      }

      .mdc-toolbar__title {

      }
    }
  }
  // stylelint-enable plugin/selector-bem-pattern
}

.mdc-toolbar--waterfall {
  &.mdc-toolbar--fixed {
    @include mdc-elevation(0);
    @include mdc-elevation-transition;

    &.mdc-toolbar--flexible-space-minimized {
      @include mdc-elevation(4);
    }

    &.mdc-toolbar--fixed-lastrow-only {
      &.mdc-toolbar--flexible-space-minimized {
        @include mdc-elevation(0);
      }

      &.mdc-toolbar--fixed-at-last-row {
        @include mdc-elevation(4);
      }
    }
  }
}
// postcss-bem-linter: end

.mdc-toolbar-fixed-adjust {
  margin-top: $mdc-toolbar-row-height;

  @media (max-width: $mdc-toolbar-mobile-landscape-width-breakpoint)
  and (orientation: landscape) {
    margin-top: $mdc-toolbar-mobile-landscape-row-height;
  }

  @media (max-width: $mdc-toolbar-mobile-breakpoint) {
    margin-top: $mdc-toolbar-mobile-row-height;
  }
}

.mdc-toolbar__section--shrink-to-fit {
  flex: none;
}
